   <div class="logout-button">
    <button class="btn btn-transparent btn-icon home-button" onclick="logout()">
      <i class="fas fa-sign-out-alt fa-2x"></i>
    </button>
  </div>
  <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    // Function to remove flash messages after 4 seconds
    setTimeout(function() {
      var successMessage = document.getElementById('successMessage');
      if (successMessage) {
        successMessage.remove();
      }
      var errorMessage = document.getElementById('errorMessage');
      if (errorMessage) {
        errorMessage.remove();
      }
    }, 6000);
  </script>
  <script>
    // Fungsi logout
    function logout() {
        fetch('/logout', {
            method: 'GET',
            credentials: 'same-origin' // Untuk mengirim kredensial (session) dalam request
        })
        .then(response => {
            window.location.href = "/loginAdmin";
        })
        .catch(error => {
            console.error('Error saat logout:', error);
        });
    }
</script>
<script>
  const searchInput = document.getElementById("searchQueryInput");
  const searchForm = document.getElementById("searchForm");
  const searchResults = document.getElementById("searchResults");

  searchInput.addEventListener("input", async () => {
    const searchQuery = searchInput.value.trim();

    // Bersihkan hasil pencarian jika input kosong
    if (searchQuery === "") {
      searchResults.innerHTML = "";
      return;
    }

    // Kirim permintaan AJAX ke endpoint
    try {
      const response = await fetch(`/searchBooksAjax?searchQuery=${encodeURIComponent(searchQuery)}`);
      const data = await response.json();

      // Buat daftar rekomendasi buku
      searchResults.innerHTML = "";
      data.books.forEach(book => {
        const bookItem = document.createElement("div");
        bookItem.classList.add("searchResultItem");
        const bookLink = document.createElement("a");
        bookLink.textContent = book.Judul;
        bookLink.href = `/searchBook?searchQuery=${encodeURIComponent(book.Judul)}`;
        bookItem.appendChild(bookLink);
        searchResults.appendChild(bookItem);
      });
    } catch (error) {
      console.error("Error fetching book data:", error);
      searchResults.innerHTML = "<p>Error fetching book data</p>";
    }
  });

  // Bersihkan hasil pencarian saat form dikirim
  searchForm.addEventListener("submit", () => {
    searchResults.innerHTML = "";
  });
</script>
<script>
  const searchInputMember = document.getElementById("searchQueryInputMember");
  const searchFormMember = document.getElementById("searchFormMember");
  const searchResultsMember = document.getElementById("searchResultsMember");

  searchInputMember.addEventListener("input", async () => {
    const searchQueryMember = searchInputMember.value.trim();

    // Bersihkan hasil pencarian jika input kosong
    if (searchQueryMember === "") {
      searchResultsMember.innerHTML = "";
      return;
    }

    // Kirim permintaan AJAX ke endpoint pencarian anggota
    try {
      const response = await fetch(`/searchMemberAjax?searchQuery=${encodeURIComponent(searchQueryMember)}`);
      const data = await response.json();

      // Buat daftar hasil pencarian anggota
      searchResultsMember.innerHTML = "";
      data.members.forEach(member => {
        const memberItem = document.createElement("div");
        memberItem.classList.add("searchResultItem");
        const memberLink = document.createElement("a");
        memberLink.textContent = member.nama;
        memberLink.href = `/searchMember?searchQuery=${encodeURIComponent(member.nama)}`;
        memberItem.appendChild(memberLink);
        searchResultsMember.appendChild(memberItem);
      });
    } catch (error) {
      console.error("Error fetching member data:", error);
      searchResultsMember.innerHTML = "<p>Error fetching member data</p>";
    }
  });

  // Bersihkan hasil pencarian saat form dikirim
  searchFormMember.addEventListener("submit", () => {
    searchResultsMember.innerHTML = "";
  });
</script>
<script>
  const searchInputPinjam = document.getElementById("searchQueryInputPinjam");
  const searchFormPinjam = document.getElementById("searchFormPinjam");
  const searchResultsPinjam = document.getElementById("searchResultsPinjam");

  searchInputPinjam.addEventListener("input", async () => {
    const searchQueryPinjam = searchInputPinjam.value.trim();

    // Bersihkan hasil pencarian jika input kosong
    if (searchQueryPinjam === "") {
      searchResultsPinjam.innerHTML = "";
      return;
    }

    // Kirim permintaan AJAX ke endpoint pencarian peminjaman
    try {
      const response = await fetch(`/searchPinjamAjax?searchQuery=${encodeURIComponent(searchQueryPinjam)}`);
      const data = await response.json();

      // Buat daftar hasil pencarian peminjaman
      searchResultsPinjam.innerHTML = "";
      data.pinjam.forEach(pinjam => {
        const peminjamanItem = document.createElement("div");
        peminjamanItem.classList.add("searchResultItem");
        const peminjamanLink = document.createElement("a");
        peminjamanLink.textContent = pinjam.ISBN;
        peminjamanLink.href = `/searchPinjam?searchQuery=${encodeURIComponent(pinjam.ISBN)}`;
        peminjamanItem.appendChild(peminjamanLink);
        searchResultsPinjam.appendChild(peminjamanItem);
      });
    } catch (error) {
      console.error("Error fetching peminjaman data:", error);
      searchResultsPinjam.innerHTML = "<p>Error fetching peminjaman data</p>";
    }
  });
</script>

  </body>
</html>